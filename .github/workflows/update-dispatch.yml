name: "update dispatch"
on:
  # push:
  #   branches:
  #     - pr-periodic-updates
  schedule:
    - cron: "0 4 * * *" # run daily
    - cron: "0 7,10,13 * * 3" # run several more times on wednesday to make up for a delayed release
  workflow_dispatch: {}
concurrency:
  # group: ${{ github.head_ref }}
  group: one
  cancel-in-progress: true

jobs:
  update:
    strategy:
      fail-fast: false
      matrix:
        group:
          - holochain-tags
          - holochain-main
          - holochain-develop
          - rust-overlay
          - nixpkgs
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install nix
        uses: cachix/install-nix-action@v18
      - name: Setup cachix
        uses: cachix/cachix-action@v12
        with:
          name: holochain-ci
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: set up git config
        run: |
          git config --global user.email "hrabot@holochain.org"
          git config --global user.name "Holochain Release Automation"
      - name: update source ${{ matrix.group }}
        run: |
          echo -e "update source ${{ matrix.group }}\n" > /tmp/update-commit-mgs
          nix flake lock --update-input ${{ matrix.group }} 2>> /tmp/update-commit-mgs
          git add .
          git commit -m "$(cat /tmp/update-commit-mgs)"
      - name: evaluate the existence of relevant commits
        id: eval-commits
        run: |
          set -x

          echo ${GITHUB_HEAD_REF}
          echo ${GITHUB_REF_NAME}
          env PAGER="" git diff origin/${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}} -I pinned

          if ! git diff ${GITHUB_HEAD_REF:-origin/${GITHUB_REF_NAME}} -I pinned --exit-code --quiet; then
            echo "::set-output name=pr-justified::true"
          else
            echo "::set-output name=pr-justified::false"
          fi

      - name: create pull request
        uses: peter-evans/create-pull-request@v4.2.3
        if: steps.eval-commits.outputs.pr-justified == 'true'
        id: cpr1
        with:
          token: ${{ secrets.HRA_GITHUB_TOKEN }}
          title: update ${{ matrix.command.name }} on ${{ github.ref_name }}
          branch: auto-update/${{ github.ref_name }}/${{ matrix.command.name }}
          labels: |
            release
            autorebase:opt-in
          draft: false
          delete-branch: true
          reviewers: steveej
      - name: Enable Pull Request Automerge
        if: steps.cpr1.outputs.pull-request-operation == 'created' || steps.cpr1.outputs.pull-request-operation == 'updated'
        uses: peter-evans/enable-pull-request-automerge@v2
        with:
          token: ${{ secrets.HRA_GITHUB_TOKEN}}
          pull-request-number: ${{ steps.cpr1.outputs.pull-request-number }}
          merge-method: squash
      - name: Auto approve Pull Request
        if: steps.cpr1.outputs.pull-request-operation == 'created' || steps.cpr1.outputs.pull-request-operation == 'updated'
        uses: juliangruber/approve-pull-request-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.cpr1.outputs.pull-request-number }}
  all-jobs-succeed:
    runs-on: "ubuntu-latest"
    if: always()
    needs: [update]
    steps:
      - name: Check status
        env:
          RESULTS: "${{ toJSON(needs.*.result) }}"
        run: "[[ $(jq -n 'env.RESULTS | fromjson | unique == [\"success\"]') == \"true\" ]]\n"
