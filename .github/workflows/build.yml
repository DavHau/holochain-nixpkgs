---
name: Build
"on":
  pull_request: ~
concurrency:
  group: "${{ github.head_ref }}"
  cancel-in-progress: true
jobs:
  crate-tests:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
        cachixName:
          - holochain-ci
    runs-on: "${{ matrix.platform }}"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install nix
        uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |
            experimental-features = flakes nix-command
      - name: Setup cachix
        uses: cachix/cachix-action@v12
        if: "${{ matrix.cachixName != '<YOUR_CACHIX_NAME>' }}"
        with:
          name: "${{ matrix.cachixName }}"
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Set NIX_PATH
        if: "${{ matrix.platform == 'macos-latest' }}"
        run: "echo NIX_PATH=$(nix eval .#NIX_PATH) >> $GITHUB_ENV"
      - name: Run cargo tests
        run: "nix-shell --pure --run \"cargo test\""
  holochain-binaries:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
        nixAttribute:
          - main
          - develop
          - v0_0_171
          - v0_0_172
          - v0_0_173
          - v0_0_174
          - v0_0_175
          - v0_1_0-beta-rc_0
          - v0_1_0-beta-rc_1
          - v0_1_0-beta-rc_2
        nurRepo:
          - holochain-nixpkgs
        cachixName:
          - holochain-ci
    runs-on: "${{ matrix.platform }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: false
      - name: Install nix
        uses: cachix/install-nix-action@v18
      - name: Show nixpkgs version
        run: "nix eval .#nixpkgsVersion"
      - name: Setup cachix
        uses: cachix/cachix-action@v12
        if: "${{ matrix.cachixName != '<YOUR_CACHIX_NAME>' }}"
        with:
          name: "${{ matrix.cachixName }}"
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Build derivations
        continue-on-error: "${{ matrix.platform == 'macos-latest' }}"
        env:
          nix_attribute: "${{ matrix.nixAttribute }}"
        run: "nix build .#holochain_${nix_attribute}"
  all-jobs-succeed:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - crate-tests
      - holochain-binaries
      - packages
    steps:
      - name: Check status
        env:
          RESULTS: "${{ toJSON(needs.*.result) }}"
        run: "[[ $(jq -n 'env.RESULTS | fromjson | unique == [\"success\"]') == \"true\" ]]\n"
